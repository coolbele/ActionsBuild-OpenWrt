name: 360

on:
  push:
  schedule:
    - cron: '0 1 * * *' # every 30 minutes
  workflow_dispatch: # on button click

env:
  REPO_URL: https://github.com/zheshifandian/openwrt-ax1800
  REPO_BRANCH: master
  CONFIG_FILE: config/360v6.config
  DIY1: shell/diy-by-packages.sh
  DIY2: shell/diy-by-config.sh
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: 初始化
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi $(docker images -q)
        sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android $AGENT_TOOLSDIRECTORY
        sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
        sudo -E apt-get -y update
        sudo -E apt-get -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison btrfs-progs build-essential bzip2 ca-certificates ccache cmake coreutils cpio curl device-tree-compiler fastjar flex g++-multilib gawk gcc-multilib gettext git git-core gperf gzip haveged help2man intltool jq libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool libz-dev lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pigz pkgconf python2.7 python3 python3-pip python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools swig tar texinfo uglifyjs unzip upx upx-ucl vim wget xmlto xsltproc xxd xz-utils yasm zip zlib1g-dev zstd rename
        sudo -E systemctl daemon-reload
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get -y clean
        sudo timedatectl set-timezone "$TZ"

    - name: 拉取openwrt源码
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH $GITHUB_WORKSPACE/openwrt
        
    - name: 查看一些属性
      run: |
        echo '查看GITHUB_WORKSPACE'
        cd $GITHUB_WORKSPACE
        ls -d */

    - name: DIY1(一般用于安装依赖和插件)
      working-directory: ./openwrt
      run: |
        [ -e $GITHUB_WORKSPACE/$DIY1 ] && echo '有提供DIY1，将开始DIY' && chmod +x $GITHUB_WORKSPACE/$DIY1 && $GITHUB_WORKSPACE/$DIY1

    - name: 安装并更新资源
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        ./scripts/feeds install -a

    - name: 加载.config配置项
      run: |
        [ -e $GITHUB_WORKSPACE/$CONFIG_FILE ] && echo '有提供配置，将使用用户提供的配置安装依赖和插件' && mv $GITHUB_WORKSPACE/$CONFIG_FILE openwrt/.config

    - name: DIY2（一般用于ip和样式等）
      run: |
        [ -e $GITHUB_WORKSPACE/$DIY2 ] && echo '有提供DIY2，将开始DIY' && chmod +x $GITHUB_WORKSPACE/$DIY2 && $GITHUB_WORKSPACE/$DIY2

    - name: 生成配置
      working-directory: ./openwrt
      run: |
        make defconfig
        echo '查看最终生成的.config文件'
        cat .config

    - name: 下载依赖
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译固件
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s

        echo "COMPILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name : 上传结果
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt-${{ env.COMPILE_DATE }}
        path: openwrt/bin
